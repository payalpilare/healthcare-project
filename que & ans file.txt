Answer the following Questions in 1to 2 lines .

● Question 1: What is Pandas, and why is it commonly used in data cleaning tasks?

Ans:-  Pandas is a versatile Python library extensively used in data cleaning tasks due to its ability to handle large datasets efficiently. Its rich functionality, including data manipulation, aggregation, and missing data handling, makes it an essential tool for cleaning and preparing data for analysis.

 ● Question 2: Given a DataFrame with missing values, how would you check for missing values in each column and count the total number of missing values? 

Ans:-  # To check missing values in each column
           missing_values = df.isnull().sum()
          total_missing = missing_values.sum()

● Question 3: How can you remove duplicates from a DataFrame while retaining the first occurrence of each unique row? 

Ans:-  # To remove duplicates from dataframe while retaining the first occurance
           df = df.drop_duplicates(keep='first')

● Question 4: If you have a DataFrame with a column containing string values, how can you convert all the values in that column to lowercase? 

Ans:- df['column_name'] = df['column_name'].str.lower()

● Question 5: How do you replace missing values in a DataFrame with a specific value, like 0, for a particular column?

Ans:-  df['column_name'].fillna(0, inplace=True)

● Question 6: If you have a DataFrame with a datetime column, how can you extract the year, month, and day into separate columns? 

Ans:- df['year'] = df['datetime_column'].dt.year
         df['month'] = df['datetime_column'].dt.month
          df['day'] = df['datetime_column'].dt.day

● Question 7: How can you filter rows in a DataFrame where a specific column's values meet a certain condition (e.g., all rows where 'age' is greater than 30)? 

Ans:-  df_filtered = df[df['age'] > 30]

● Question 8: What is the purpose of the .apply() function in Pandas, and how would you use it to create a new column based on values from existing columns? 

Ans:-  df['new_column'] = df.apply(lambda row: your_function(row['column1'], row['column2']), axis=1)

● Question 9: Suppose you want to merge two DataFrames, 'df1' and 'df2,' on a common column 'key.' How would you perform this merge operation in Pandas?

Ans:- merged_df = pd.merge(df1, df2, on='key')

 ● Question 10: You have a DataFrame with a column containing messy text data. How can you clean and standardize the text data (e.g., remove punctuation and convert to lowercase) in that column?

Ans:- df['text_column'] = df['text_column'].str.replace('[^\w\s]', '').str.lower()
